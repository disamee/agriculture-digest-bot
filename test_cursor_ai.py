"""
Test script for Real Cursor AI Integration
"""
import asyncio
import logging
from cursor_ai_integration import generate_digest_with_ai

# Set up logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_cursor_ai_digest():
    """Test real Cursor AI digest generation"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Real Cursor AI –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–π–¥–∂–µ—Å—Ç–∞")
    print("=" * 60)
    
    # Sample agriculture articles
    articles = [
        {
            'title': '–¶–µ–Ω—ã –Ω–∞ –ø—à–µ–Ω–∏—Ü—É –≤—ã—Ä–æ—Å–ª–∏ –∏–∑-–∑–∞ –∑–∞—Å—É—Ö–∏ –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ',
            'summary': '–¶–µ–Ω—ã –Ω–∞ –ø—à–µ–Ω–∏—Ü—É –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ –≤—ã—Ä–æ—Å–ª–∏ –Ω–∞ 15% –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –∏–∑-–∑–∞ —Å–∏–ª—å–Ω–æ–π –∑–∞—Å—É—Ö–∏ –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–µ—Ä–Ω–æ–ø—Ä–æ–∏–∑–≤–æ–¥—è—â–∏—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö. –≠–∫—Å–ø–µ—Ä—Ç—ã –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É—é—Ç –¥–∞–ª—å–Ω–µ–π—à–∏–π —Ä–æ—Å—Ç —Ü–µ–Ω –Ω–∞ —Ñ–æ–Ω–µ —Å–Ω–∏–∂–µ–Ω–∏—è —É—Ä–æ–∂–∞–π–Ω–æ—Å—Ç–∏.',
            'source': 'Margin.kz',
            'link': 'https://margin.kz/news/wheat-prices-rise-drought'
        },
        {
            'title': '–ù–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Ç–æ—á–Ω–æ–≥–æ –∑–µ–º–ª–µ–¥–µ–ª–∏—è –≤–Ω–µ–¥—Ä—è—é—Ç—Å—è –≤ –†–æ—Å—Å–∏–∏',
            'summary': '–ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ç–æ—á–Ω–æ–≥–æ –∑–µ–º–ª–µ–¥–µ–ª–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò–ò –±—ã–ª–∞ –∑–∞–ø—É—â–µ–Ω–∞ –¥–ª—è –ø–æ–º–æ—â–∏ —Ñ–µ—Ä–º–µ—Ä–∞–º –≤ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —É—Ä–æ–∂–∞–π–Ω–æ—Å—Ç–∏. –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–ø—É—Ç–Ω–∏–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –≤–Ω–µ—Å–µ–Ω–∏—è —É–¥–æ–±—Ä–µ–Ω–∏–π.',
            'source': 'APK-Inform',
            'link': 'https://apk-inform.com/ru/news/precision-agriculture-ai'
        },
        {
            'title': '–≠–∫—Å–ø–æ—Ä—Ç –∑–µ—Ä–Ω–∞ –∏–∑ –†–æ—Å—Å–∏–∏ —É–≤–µ–ª–∏—á–∏–ª—Å—è –Ω–∞ 20%',
            'summary': '–≠–∫—Å–ø–æ—Ä—Ç –∑–µ—Ä–Ω–æ–≤—ã—Ö –∫—É–ª—å—Ç—É—Ä –∏–∑ –†–æ—Å—Å–∏–∏ –≤ —Ç–µ–∫—É—â–µ–º —Å–µ–∑–æ–Ω–µ —É–≤–µ–ª–∏—á–∏–ª—Å—è –Ω–∞ 20% –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–æ—à–ª—ã–º –≥–æ–¥–æ–º. –û—Å–Ω–æ–≤–Ω—ã–º–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º–∏ —Å—Ç–∞–ª–∏ —Å—Ç—Ä–∞–Ω—ã –ë–ª–∏–∂–Ω–µ–≥–æ –í–æ—Å—Ç–æ–∫–∞ –∏ –ê—Ñ—Ä–∏–∫–∏.',
            'source': 'Fastmarkets Agriculture',
            'link': 'https://fastmarkets.com/agriculture/russia-grain-exports'
        },
        {
            'title': '–ó–∞—Å—É—Ö–∞ –≤ –£–∫—Ä–∞–∏–Ω–µ —É–≥—Ä–æ–∂–∞–µ—Ç —É—Ä–æ–∂–∞—é –∫—É–∫—É—Ä—É–∑—ã',
            'summary': '–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∞—è—Å—è –∑–∞—Å—É—Ö–∞ –≤ —é–∂–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö –£–∫—Ä–∞–∏–Ω—ã —Å–æ–∑–¥–∞–µ—Ç —É–≥—Ä–æ–∑—É –¥–ª—è —É—Ä–æ–∂–∞—è –∫—É–∫—É—Ä—É–∑—ã. –§–µ—Ä–º–µ—Ä—ã —Å–æ–æ–±—â–∞—é—Ç –æ —Å–Ω–∏–∂–µ–Ω–∏–∏ –æ–∂–∏–¥–∞–µ–º–æ–π —É—Ä–æ–∂–∞–π–Ω–æ—Å—Ç–∏ –Ω–∞ 25-30%.',
            'source': 'APK News Kazakhstan',
            'link': 'https://apk-news.kz/ukraine-corn-drought'
        },
        {
            'title': '–¶–µ–Ω—ã –Ω–∞ —Å–æ—é —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å –ø–æ—Å–ª–µ —Ä–æ—Å—Ç–∞',
            'summary': '–¶–µ–Ω—ã –Ω–∞ —Å–æ—é –Ω–∞ –º–∏—Ä–æ–≤—ã—Ö —Ä—ã–Ω–∫–∞—Ö —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å –ø–æ—Å–ª–µ —Ä–µ–∑–∫–æ–≥–æ —Ä–æ—Å—Ç–∞ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –º–µ—Å—è—Ü–µ. –ê–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å–≤—è–∑—ã–≤–∞—é—Ç —ç—Ç–æ —Å —É–ª—É—á—à–µ–Ω–∏–µ–º –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—è.',
            'source': 'Eldala.kz',
            'link': 'https://eldala.kz/soybean-prices-stabilize'
        }
    ]
    
    print(f"üì∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å {len(articles)} —Å—Ç–∞—Ç—å—è–º–∏...")
    
    try:
        # Generate digest using real Cursor AI
        print("üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–π–¥–∂–µ—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é Cursor AI...")
        digest = await generate_digest_with_ai(articles)
        
        if digest:
            print("‚úÖ –î–∞–π–¥–∂–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
            print(f"üìä –î–ª–∏–Ω–∞ –¥–∞–π–¥–∂–µ—Å—Ç–∞: {len(digest)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            print("\nüìã –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç:")
            print("-" * 60)
            print(digest)
            print("-" * 60)
            
            # Analyze the digest
            print("\nüîç –ê–Ω–∞–ª–∏–∑ –¥–∞–π–¥–∂–µ—Å—Ç–∞:")
            if "üåæ" in digest:
                print("‚úÖ –°–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–∞–π–¥–∂–µ—Å—Ç–∞")
            if "üìà" in digest:
                print("‚úÖ –°–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è")
            if "üìä" in digest:
                print("‚úÖ –°–æ–¥–µ—Ä–∂–∏—Ç –∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞")
            if "üåæ" in digest and "–ü–æ —Ç–æ–≤–∞—Ä–Ω—ã–º –≥—Ä—É–ø–ø–∞–º" in digest:
                print("‚úÖ –°–æ–¥–µ—Ä–∂–∏—Ç –∞–Ω–∞–ª–∏–∑ –ø–æ —Ç–æ–≤–∞—Ä–Ω—ã–º –≥—Ä—É–ø–ø–∞–º")
            if "üì∞" in digest:
                print("‚úÖ –°–æ–¥–µ—Ä–∂–∏—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏")
            if "üîÆ" in digest:
                print("‚úÖ –°–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–≥–Ω–æ–∑")
            
            # Check for source links
            link_count = digest.count("üîó")
            print(f"üîó –°–æ–¥–µ—Ä–∂–∏—Ç {link_count} —Å—Å—ã–ª–æ–∫ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏")
            
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–∞–π–¥–∂–µ—Å—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–π–¥–∂–µ—Å—Ç–∞: {str(e)}")
        logger.error(f"Error in digest generation: {str(e)}")

async def test_ai_capabilities():
    """Test AI capabilities"""
    print("\nüß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π AI...")
    
    # Test with different article types
    test_cases = [
        {
            'name': '–¶–µ–Ω–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏',
            'articles': [{
                'title': '–¶–µ–Ω—ã –Ω–∞ –ø—à–µ–Ω–∏—Ü—É –≤—ã—Ä–æ—Å–ª–∏ –Ω–∞ 10%',
                'summary': '–†–æ—Å—Ç —Ü–µ–Ω —Å–≤—è–∑–∞–Ω —Å —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è',
                'source': 'Test Source',
                'link': 'https://example.com'
            }]
        },
        {
            'name': '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏',
            'articles': [{
                'title': '–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –ò–ò –≤ —Å–µ–ª—å—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ',
                'summary': '–ù–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø–æ–≤—ã—à–∞—é—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                'source': 'Test Source',
                'link': 'https://example.com'
            }]
        },
        {
            'name': '–ü–æ–≥–æ–¥–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏',
            'articles': [{
                'title': '–ó–∞—Å—É—Ö–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ —É—Ä–æ–∂–∞–π',
                'summary': '–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —Å–æ–∑–¥–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã –¥–ª—è —Ñ–µ—Ä–º–µ—Ä–æ–≤',
                'source': 'Test Source',
                'link': 'https://example.com'
            }]
        }
    ]
    
    for test_case in test_cases:
        print(f"\nüìù –¢–µ—Å—Ç: {test_case['name']}")
        try:
            digest = await generate_digest_with_ai(test_case['articles'])
            if digest:
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –¥–∞–π–¥–∂–µ—Å—Ç ({len(digest)} —Å–∏–º–≤–æ–ª–æ–≤)")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–∞–π–¥–∂–µ—Å—Ç")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

def main():
    """Main test function"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Real Cursor AI Integration")
    
    # Test main digest generation
    asyncio.run(test_cursor_ai_digest())
    
    # Test AI capabilities
    asyncio.run(test_ai_capabilities())
    
    print("\nüìù –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("‚úÖ Real Cursor AI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
    print("ü§ñ –î–∞–π–¥–∂–µ—Å—Ç—ã –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è —Å –ø–æ–º–æ—â—å—é AI –±–µ–∑ –∫–æ–¥–∞")
    print("üìä –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏ —Ä–∞–Ω–∂–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç—å–∏")
    print("üîó –í–∫–ª—é—á–∞–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏")
    print("üá∑üá∫ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫")
    
    print("\n‚öôÔ∏è –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª —Å —Ç–æ–∫–µ–Ω–æ–º –±–æ—Ç–∞")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'python main.py' –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –±–æ—Ç–∞")
    print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π '/digest' –≤ Telegram")

if __name__ == "__main__":
    main()
